
from ..rust import make_enum, make_struct, make_tuple, get_class, SelfResolvingTypeVar, Dict
import typing
            
IdBox = make_enum("IdBox", [("DomainId", get_class("iroha_data_model.domain.Id")), ("AccountId", get_class("iroha_data_model.account.Id")), ("AssetDefinitionId", get_class("iroha_data_model.asset.DefinitionId")), ("AssetId", get_class("iroha_data_model.asset.Id")), ("PeerId", get_class("iroha_data_model.peer.Id")), ("TriggerId", get_class("iroha_data_model.trigger.Id")), ("RoleId", get_class("iroha_data_model.role.Id")), ("PermissionTokenDefinitionId", get_class("iroha_data_model.permission.token.Id")), ("ValidatorId", get_class("iroha_data_model.permission.validator.Id")), ("ParameterId", get_class("iroha_data_model.parameter.Id"))], typing.Union[get_class("iroha_data_model.domain.Id"), get_class("iroha_data_model.account.Id"), get_class("iroha_data_model.asset.DefinitionId"), get_class("iroha_data_model.asset.Id"), get_class("iroha_data_model.peer.Id"), get_class("iroha_data_model.trigger.Id"), get_class("iroha_data_model.role.Id"), get_class("iroha_data_model.permission.token.Id"), get_class("iroha_data_model.permission.validator.Id"), get_class("iroha_data_model.parameter.Id")])

IdentifiableBox = make_enum("IdentifiableBox", [("NewDomain", get_class("iroha_data_model.domain.NewDomain")), ("NewAccount", get_class("iroha_data_model.account.NewAccount")), ("NewAssetDefinition", get_class("iroha_data_model.asset.NewAssetDefinition")), ("NewRole", get_class("iroha_data_model.role.NewRole")), ("Peer", get_class("iroha_data_model.peer.Peer")), ("Domain", get_class("iroha_data_model.domain.Domain")), ("Account", get_class("iroha_data_model.account.Account")), ("AssetDefinition", get_class("iroha_data_model.asset.AssetDefinition")), ("Asset", get_class("iroha_data_model.asset.Asset")), ("Trigger", get_class("iroha_data_model.trigger.Trigger")), ("Role", get_class("iroha_data_model.role.Role")), ("PermissionTokenDefinition", get_class("iroha_data_model.permission.token.Definition")), ("Validator", get_class("iroha_data_model.permission.validator.Validator")), ("Parameter", get_class("iroha_data_model.parameter.Parameter"))], typing.Union[get_class("iroha_data_model.domain.NewDomain"), get_class("iroha_data_model.account.NewAccount"), get_class("iroha_data_model.asset.NewAssetDefinition"), get_class("iroha_data_model.role.NewRole"), get_class("iroha_data_model.peer.Peer"), get_class("iroha_data_model.domain.Domain"), get_class("iroha_data_model.account.Account"), get_class("iroha_data_model.asset.AssetDefinition"), get_class("iroha_data_model.asset.Asset"), get_class("iroha_data_model.trigger.Trigger"), get_class("iroha_data_model.role.Role"), get_class("iroha_data_model.permission.token.Definition"), get_class("iroha_data_model.permission.validator.Validator"), get_class("iroha_data_model.parameter.Parameter")])

LengthLimits = make_struct("LengthLimits", [("min", int), ("max", int)])

NumericValue = make_enum("NumericValue", [("U32", get_class(int)), ("U64", get_class(int)), ("U128", get_class(int)), ("Fixed", get_class("iroha_primitives.fixed.Fixed"))], typing.Union[get_class(int), get_class(int), get_class(int), get_class("iroha_primitives.fixed.Fixed")])

RegistrableBox = make_enum("RegistrableBox", [("Peer", get_class("iroha_data_model.peer.Peer")), ("Domain", get_class("iroha_data_model.domain.NewDomain")), ("Account", get_class("iroha_data_model.account.NewAccount")), ("AssetDefinition", get_class("iroha_data_model.asset.NewAssetDefinition")), ("Asset", get_class("iroha_data_model.asset.Asset")), ("Trigger", get_class("iroha_data_model.trigger.Trigger")), ("Role", get_class("iroha_data_model.role.NewRole")), ("PermissionTokenDefinition", get_class("iroha_data_model.permission.token.Definition")), ("Validator", get_class("iroha_data_model.permission.validator.Validator"))], typing.Union[get_class("iroha_data_model.peer.Peer"), get_class("iroha_data_model.domain.NewDomain"), get_class("iroha_data_model.account.NewAccount"), get_class("iroha_data_model.asset.NewAssetDefinition"), get_class("iroha_data_model.asset.Asset"), get_class("iroha_data_model.trigger.Trigger"), get_class("iroha_data_model.role.NewRole"), get_class("iroha_data_model.permission.token.Definition"), get_class("iroha_data_model.permission.validator.Validator")])

Value = make_enum("Value", [("Bool", get_class(bool)), ("String", get_class(str)), ("Name", get_class("iroha_data_model.name.Name")), ("Vec", get_class(list)), ("LimitedMetadata", get_class("iroha_data_model.metadata.Metadata")), ("MetadataLimits", get_class("iroha_data_model.metadata.Limits")), ("TransactionLimits", get_class("iroha_data_model.transaction.TransactionLimits")), ("LengthLimits", get_class("iroha_data_model.LengthLimits")), ("Id", get_class("iroha_data_model.IdBox")), ("Identifiable", get_class("iroha_data_model.IdentifiableBox")), ("PublicKey", get_class("iroha_crypto.PublicKey")), ("SignatureCheckCondition", get_class("iroha_data_model.account.SignatureCheckCondition")), ("TransactionValue", get_class("iroha_data_model.transaction.TransactionValue")), ("TransactionQueryResult", get_class("iroha_data_model.transaction.TransactionQueryResult")), ("PermissionToken", get_class("iroha_data_model.permission.token.Token")), ("Hash", get_class("iroha_crypto.hash.Hash")), ("Block", get_class("iroha_data_model.block.committed.VersionedCommittedBlock")), ("BlockHeader", get_class("iroha_data_model.block.header.BlockHeader")), ("Ipv4Addr", get_class("iroha_primitives.addr.Ipv4Addr")), ("Ipv6Addr", get_class("iroha_primitives.addr.Ipv6Addr")), ("Numeric", get_class("iroha_data_model.NumericValue"))], typing.Union[get_class(bool), get_class(str), get_class("iroha_data_model.name.Name"), get_class(list), get_class("iroha_data_model.metadata.Metadata"), get_class("iroha_data_model.metadata.Limits"), get_class("iroha_data_model.transaction.TransactionLimits"), get_class("iroha_data_model.LengthLimits"), get_class("iroha_data_model.IdBox"), get_class("iroha_data_model.IdentifiableBox"), get_class("iroha_crypto.PublicKey"), get_class("iroha_data_model.account.SignatureCheckCondition"), get_class("iroha_data_model.transaction.TransactionValue"), get_class("iroha_data_model.transaction.TransactionQueryResult"), get_class("iroha_data_model.permission.token.Token"), get_class("iroha_crypto.hash.Hash"), get_class("iroha_data_model.block.committed.VersionedCommittedBlock"), get_class("iroha_data_model.block.header.BlockHeader"), get_class("iroha_primitives.addr.Ipv4Addr"), get_class("iroha_primitives.addr.Ipv6Addr"), get_class("iroha_data_model.NumericValue")])

ValueKind = make_enum("ValueKind", [("Bool", get_class(type(None))), ("String", get_class(type(None))), ("Name", get_class(type(None))), ("Vec", get_class(type(None))), ("LimitedMetadata", get_class(type(None))), ("MetadataLimits", get_class(type(None))), ("TransactionLimits", get_class(type(None))), ("LengthLimits", get_class(type(None))), ("Id", get_class(type(None))), ("Identifiable", get_class(type(None))), ("PublicKey", get_class(type(None))), ("SignatureCheckCondition", get_class(type(None))), ("TransactionValue", get_class(type(None))), ("TransactionQueryResult", get_class(type(None))), ("PermissionToken", get_class(type(None))), ("Hash", get_class(type(None))), ("Block", get_class(type(None))), ("BlockHeader", get_class(type(None))), ("Ipv4Addr", get_class(type(None))), ("Ipv6Addr", get_class(type(None))), ("Numeric", get_class(type(None)))], typing.Union[get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None))])

SelfResolvingTypeVar.resolve_all()
