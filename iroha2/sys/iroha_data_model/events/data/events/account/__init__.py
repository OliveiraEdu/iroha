
from ......rust import make_enum, make_struct, make_tuple, get_class, SelfResolvingTypeVar, Dict
import typing
            
AccountEvent = make_enum("AccountEvent", [("Asset", get_class("iroha_data_model.events.data.events.asset.AssetEvent")), ("Created", get_class("iroha_data_model.account.Account")), ("Deleted", get_class("iroha_data_model.account.Id")), ("AuthenticationAdded", get_class("iroha_data_model.account.Id")), ("AuthenticationRemoved", get_class("iroha_data_model.account.Id")), ("PermissionAdded", get_class("iroha_data_model.events.data.events.account.AccountPermissionChanged")), ("PermissionRemoved", get_class("iroha_data_model.events.data.events.account.AccountPermissionChanged")), ("RoleRevoked", get_class("iroha_data_model.events.data.events.account.AccountRoleChanged")), ("RoleGranted", get_class("iroha_data_model.events.data.events.account.AccountRoleChanged")), ("MetadataInserted", get_class("iroha_data_model.events.data.events.MetadataChanged")), ("MetadataRemoved", get_class("iroha_data_model.events.data.events.MetadataChanged"))], typing.Union[get_class("iroha_data_model.events.data.events.asset.AssetEvent"), get_class("iroha_data_model.account.Account"), get_class("iroha_data_model.account.Id"), get_class("iroha_data_model.account.Id"), get_class("iroha_data_model.account.Id"), get_class("iroha_data_model.events.data.events.account.AccountPermissionChanged"), get_class("iroha_data_model.events.data.events.account.AccountPermissionChanged"), get_class("iroha_data_model.events.data.events.account.AccountRoleChanged"), get_class("iroha_data_model.events.data.events.account.AccountRoleChanged"), get_class("iroha_data_model.events.data.events.MetadataChanged"), get_class("iroha_data_model.events.data.events.MetadataChanged")])

AccountEventFilter = make_enum("AccountEventFilter", [("ByCreated", get_class(type(None))), ("ByDeleted", get_class(type(None))), ("ByAuthenticationAdded", get_class(type(None))), ("ByAuthenticationRemoved", get_class(type(None))), ("ByPermissionAdded", get_class(type(None))), ("ByPermissionRemoved", get_class(type(None))), ("ByRoleRevoked", get_class(type(None))), ("ByRoleGranted", get_class(type(None))), ("ByMetadataInserted", get_class(type(None))), ("ByMetadataRemoved", get_class(type(None))), ("ByAsset", get_class("iroha_data_model.events.data.filters.FilterOpt"))], typing.Union[get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class(type(None)), get_class("iroha_data_model.events.data.filters.FilterOpt")])

AccountFilter = make_struct("AccountFilter", [("origin_filter", "iroha_data_model.events.data.filters.FilterOpt"), ("event_filter", "iroha_data_model.events.data.filters.FilterOpt")])

AccountPermissionChanged = make_struct("AccountPermissionChanged", [("account_id", "iroha_data_model.account.Id"), ("permission_id", "iroha_data_model.permission.token.Id")])

AccountRoleChanged = make_struct("AccountRoleChanged", [("account_id", "iroha_data_model.account.Id"), ("role_id", "iroha_data_model.role.Id")])

SelfResolvingTypeVar.resolve_all()
