
from .....rust import make_enum, make_struct, make_tuple, get_class, SelfResolvingTypeVar, Dict
import typing
            
FindError = make_enum("FindError", [("Asset", get_class("iroha_data_model.asset.Id")), ("AssetDefinition", get_class("iroha_data_model.asset.DefinitionId")), ("Account", get_class("iroha_data_model.account.Id")), ("Domain", get_class("iroha_data_model.domain.Id")), ("MetadataKey", get_class("iroha_data_model.name.Name")), ("Block", get_class("iroha_crypto.hash.HashOf")), ("Transaction", get_class("iroha_crypto.hash.HashOf")), ("Context", get_class(str)), ("Peer", get_class("iroha_data_model.peer.Id")), ("Trigger", get_class("iroha_data_model.trigger.Id")), ("Role", get_class("iroha_data_model.role.Id")), ("PermissionTokenDefinition", get_class("iroha_data_model.permission.token.Id")), ("Validator", get_class("iroha_data_model.permission.validator.Id"))], typing.Union[get_class("iroha_data_model.asset.Id"), get_class("iroha_data_model.asset.DefinitionId"), get_class("iroha_data_model.account.Id"), get_class("iroha_data_model.domain.Id"), get_class("iroha_data_model.name.Name"), get_class("iroha_crypto.hash.HashOf"), get_class("iroha_crypto.hash.HashOf"), get_class(str), get_class("iroha_data_model.peer.Id"), get_class("iroha_data_model.trigger.Id"), get_class("iroha_data_model.role.Id"), get_class("iroha_data_model.permission.token.Id"), get_class("iroha_data_model.permission.validator.Id")])

SelfResolvingTypeVar.resolve_all()
